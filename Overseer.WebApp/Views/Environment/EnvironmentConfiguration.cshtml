@model Overseer.WebApp.ViewModels.Environment.EnvironmentConfigurationViewModel
@section AdditionalScripts
{
    @Scripts.Render("~/Environment/Scripts")
}

@{
    ViewBag.Title = "Environment Configuration";
}

<div id="Page-Title">
    <div class="fl-left">
        <i class="fa fa-tachometer a-fw" aria-hidden="true"></i>&nbsp Environments<i class="fa fa-angle-right a-fw breadcrumb-spacer" aria-hidden="true"></i>Environment Configuration : @Model.EnvironmentName
    </div>
</div>

<div id="Page-Content">
    <section>
        <div class="content-area edit-usr">
            <h3>Make changes:</h3>
            <div class="form-container">
                @using (Html.BeginForm("EnvironmentConfiguration", "Environment", FormMethod.Post, new { data_ajax = "EnvConfig" }))
                {
                    <input type="hidden" name="EnvironmentId" value="@Model.EnvironmentId" />

                    <label for="envName">Display Name:</label>
                    @Html.TextBoxFor(m => m.EnvironmentName, new { @id = "envName" })

                    <label for="isOnline">Private Environment?</label>
                    @Html.CheckBoxFor(m => m.PrivateEnvironment, new { @id = "privEnvironment" })

                    <div class="tf-pair">
                        <label for="envStatus">Environment Status:</label>
                        @Html.CheckBoxFor(m => m.EnvironmentStatus, new { @id = "envStatus", @class = "tf-checkbox" })

                        <label for="downTimeCat">Reason for Downtime:</label>
                        @Html.DropDownListFor(m => m.DownTimeCategory, Model.DownTimeCategoryOptions, new { @id = "downTimeCat", @class = "tf-inverse-target" })
                    </div>

                    <div class="tf-pair">
                        <label for="monEnabled">Monitoring Enabled?</label>
                        @Html.CheckBoxFor(m => m.MonitoringEnabled, new { @id = "monEnabled", @class = "tf-checkbox" })

                        <label for="monInterval">Monitoring Interval:</label>
                        @Html.DropDownListFor(m => m.MonitoringUpdateInterval, Model.MonitoringIntervalOptions, new { @id = "monInterval", @class = "tf-target" })
                    </div>

                    <div class="center-input form-val">
                        <div class="form-val-msg">
                            @Html.ValidationMessageFor(m => m.EnvironmentName)
                        </div>
                        <div class="form-val-msg">
                            @Html.ValidationMessageFor(m => m.PrivateEnvironment)
                        </div>
                        <div class="form-val-msg">
                            @Html.ValidationMessageFor(m => m.EnvironmentStatus)
                        </div>
                        <div class="form-val-msg">
                            @Html.ValidationMessageFor(m => m.DownTimeCategory)
                        </div>
                        <div class="form-val-msg">
                            @Html.ValidationMessageFor(m => m.MonitoringEnabled)
                        </div>
                        <div class="form-val-msg">
                            @Html.ValidationMessageFor(m => m.MonitoringUpdateInterval)
                        </div>
                        <div id="dupe-env-msg" class="form-val-msg">

                        </div>
                        <div id="downtimecat-req-msg" class="form-val-msg">

                        </div>
                        <div id="interval-req-msg" class="form-val-msg">

                        </div>
                    </div>
                    <div class="form-footer">
                        <input type="submit" value="Save Changes" class="pag-btn" data-baseurl="@Model.SidebarRefreshUrl"/>
                    </div>
                }
            </div>
        </div>

        <div id="form-success">

        </div>
    </section>
</div>

