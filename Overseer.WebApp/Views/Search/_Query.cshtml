@model Overseer.WebApp.ViewModels.Search._QueryViewModel

<ul class="query-results-list">
    @if (Model.UserQueryResults.Count > 0)
    {
        foreach (var result in Model.UserQueryResults)
        {
            <a href="@Url.Action("ProfileViewer", "UserProfile", new { userId = @result.ResultId }, null)">
                <li class="flex-container query-result">
                    <div class="query-result-name">
                        @result.ResultName
                    </div>
                    <div class="query-result-props">
                        <ul>
                            @foreach (var property in result.MatchedProperties)
                            {
                                <li>
                                    @for (int i = 0; i < property.PropertyValue.Count; i++)
                                    {
                                        <span>@property.PropertyValue[i]</span>if (i < property.PropertyValue.Count - 1){<span class="matched-val">@property.MatchedSubstring</span>}
                                    }
                                    <span class="matched-prop">(@(property.PropertyName))</span>
                                </li>
                            }
                        </ul>
                    </div>
                </li>
            </a>
        }
    }
    else if (Model.EnvironmentQueryResults.Count > 0)
    {
        foreach (var result in Model.EnvironmentQueryResults)
        {
            <a href="@Url.Action("Environmentseer", "Environment", new { environmentId = @result.ResultId }, null)">
                <li class="flex-container query-result">
                    <div class="query-result-name">
                        @result.ResultName
                    </div>
                    <div class="query-result-props">
                        <ul>
                            @foreach (var property in result.MatchedProperties)
                            {
                                <li>
                                    @for (int i = 0; i < property.PropertyValue.Count; i++)
                                    {
                                        <span>@property.PropertyValue[i]</span>if (i < property.PropertyValue.Count - 1)
                                        {<span class="matched-val">@property.MatchedSubstring</span>}
                                    }
                                    <span class="matched-prop">(@(property.PropertyName))</span>
                                </li>
                            }
                        </ul>
                    </div>
                </li>
            </a>
        }
    }
    else if (Model.MachineQueryResults.Count > 0)
    {
        foreach (var result in Model.MachineQueryResults)
        {
            <a href="@Url.Action("Machineseer", "Machine", new { machineId = @result.ResultId }, null)">
                <li class="flex-container query-result">
                    <div class="query-result-name">
                        @result.ResultName
                    </div>
                    <div class="query-result-props">
                        <ul>
                            @foreach (var property in result.MatchedProperties)
                            {
                                <li>
                                    @for (int i = 0; i < property.PropertyValue.Count; i++)
                                    {
                                        <span>@property.PropertyValue[i]</span>
                                        if (i < property.PropertyValue.Count - 1)
                                        {
                                            <span class="matched-val">@property.MatchedSubstring</span>
                                        }
                                    }
                                    <span class="matched-prop">(@(property.PropertyName))</span>
                                </li>
                            }
                        </ul>
                    </div>
                </li>
            </a>
        }
    }
    else
    {
        <li class="query-result no-results">
            0 Results..
        </li>
    }
</ul>

